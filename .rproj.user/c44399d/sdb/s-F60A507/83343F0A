{
    "collab_server" : "",
    "contents" : "## useful-fn.R\nget.dd <- function(lm.object){\n  lm.dd <- lm.object\n  dd.results <- data.frame(matrix(NA, nrow=3, ncol=3))\n  row.names(dd.results) <- c(\"Treatment\", \"Control\", \"Diff\")\n  names(dd.results) <- c(\"Post-treatment\", \"Pre-treatment\", \"Diff\")\n  b0 <- lm.dd$coefficients[[\"(Intercept)\"]]\n  b1 <- lm.dd$coefficients[[\"I(post * treated)\"]]\n  b2 <- lm.dd$coefficients[[\"treated\"]]\n  b3 <- lm.dd$coefficients[[\"post\"]]\n  \n  dd.results[\"Treatment\", \"Post-treatment\"] <- b0+b1+b2+b3\n  dd.results[\"Treatment\", \"Pre-treatment\"] <- b0+b2\n  dd.results[\"Treatment\", \"Diff\"] <- b1+b3\n  \n  dd.results[\"Control\", \"Post-treatment\"] <- b0+b3\n  dd.results[\"Control\", \"Pre-treatment\"] <- b0\n  dd.results[\"Control\", \"Diff\"] <- b3\n  \n  dd.results[\"Diff\", \"Post-treatment\"] <- b1+b2\n  dd.results[\"Diff\", \"Pre-treatment\"] <- b2\n  dd.results[\"Diff\", \"Diff\"] <- b1\n  \n  return(dd.results)\n}\n\n## winsorize\nwins <- function(x){\n  percentiles <- quantile(x, probs=seq(0,1,0.01), na.rm=TRUE)\n  p01 <- percentiles[\"1%\"]\n  p99 <- percentiles[\"99%\"]\n  x.w <- ifelse(x<=p01, p01, x)\n  x.w <- ifelse(x>=p99, p99, x.w)\n  return(x.w)\n}\nwins.df <- function(X, var, firmid=\"firm\", yearid = \"year\"){\n  years <- unique(X[,yearid])\n  Y <- X[, c(firmid, yearid)]\n  for(year in years){\n    x <- X[which(X[, yearid] == year), var]\n    x.w <- wins(x)\n    var.w <- paste(var, \".w\", sep=\"\")\n    Y[which(Y[,yearid] == year), var.w] <- x.w\n  }\n  print(summary(Y[,var.w]))\n  print(summary(X[,var]))\n  return(Y)\n}\n\n## Usage:\n##\n## > for(x in vars){\n## >   X1 <- wins.df(X[,c(\"gvkey\", \"fyear\", x)], var=x, firmid=\"gvkey\", yearid=\"fyear\" )\n## >   X <- merge(X, X1, by=c(\"gvkey\", \"fyear\"))  \n## > }\n\n## Summary statistics\nget.summary.stats.helper <- function(x){\n  p01 <- quantile(x, probs=seq(0, 1, .01), na.rm=TRUE)[\"1%\"]\n  p05 <- quantile(x, probs=seq(0, 1, .01), na.rm=TRUE)[\"5%\"]\n  p25 <- quantile(x, probs=seq(0, 1, .01), na.rm=TRUE)[\"25%\"]\n  p75 <- quantile(x, probs=seq(0, 1, .01), na.rm=TRUE)[\"75%\"]\n  p95 <- quantile(x, probs=seq(0, 1, .01), na.rm=TRUE)[\"95%\"]\n  p99 <- quantile(x, probs=seq(0, 1, .01), na.rm=TRUE)[\"99%\"]\n  s <- c(mean(x, na.rm=TRUE), sd(x, na.rm=TRUE), p01, p05, p25, median(x, na.rm=TRUE), p75, p95, p99)\n  return(formatC(s, format=\"f\", digits=3, big.mark=\",\"))\n}\nget.summary.stats <- function(df, variables){\n  summary.stats <- data.frame(matrix(NA, nrow=0, ncol=9))\n  names(summary.stats) <- c(\"Mean\", \"Std Dev\", \"1st\", \"5th\", \"25th\", \"Median\", \"75th\", \"95th\", \"99th\")\n  for(v in variables) summary.stats[v, ] <- get.summary.stats.helper(df[,v])\n  return(summary.stats)\n}\n\n## Usage:\n## > \n\n# x is a matrix containing the data\n# method : correlation method. \"pearson\"\" or \"spearman\"\" is supported\n# removeTriangle : remove upper or lower triangle\n# results :  if \"html\" or \"latex\"\n# the results will be displayed in html or latex format\ncorstars <-function(x, method=c(\"pearson\", \"spearman\"), removeTriangle=c(\"upper\", \"lower\"),\n                    result=c(\"none\", \"html\", \"latex\")){\n  #Compute correlation matrix\n  require(Hmisc)\n  x <- as.matrix(x)\n  correlation_matrix<-rcorr(x, type=method[1])\n  R <- correlation_matrix$r # Matrix of correlation coeficients\n  p <- correlation_matrix$P # Matrix of p-value \n  \n  ## Define notions for significance levels; spacing is important.\n  mystars <- ifelse(p < .001, \"****\", ifelse(p < .001, \"*** \", ifelse(p < .01, \"**  \", ifelse(p < .05, \"*   \", \"    \"))))\n  \n  ## trunctuate the correlation matrix to two decimal\n  R <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1]\n  \n  ## build a new matrix that includes the correlations with their apropriate stars\n  Rnew <- matrix(paste(R, mystars, sep=\"\"), ncol=ncol(x))\n  diag(Rnew) <- paste(diag(R), \" \", sep=\"\")\n  rownames(Rnew) <- colnames(x)\n  colnames(Rnew) <- paste(colnames(x), \"\", sep=\"\")\n  \n  ## remove upper triangle of correlation matrix\n  if(removeTriangle[1]==\"upper\"){\n    Rnew <- as.matrix(Rnew)\n    Rnew[upper.tri(Rnew, diag = TRUE)] <- \"\"\n    Rnew <- as.data.frame(Rnew)\n  }\n  \n  ## remove lower triangle of correlation matrix\n  else if(removeTriangle[1]==\"lower\"){\n    Rnew <- as.matrix(Rnew)\n    Rnew[lower.tri(Rnew, diag = TRUE)] <- \"\"\n    Rnew <- as.data.frame(Rnew)\n  }\n  \n  ## remove last column and return the correlation matrix\n  Rnew <- cbind(Rnew[1:length(Rnew)-1])\n  if (result[1]==\"none\") return(Rnew)\n  else{\n    if(result[1]==\"html\") print(xtable(Rnew), type=\"html\")\n    else print(xtable(Rnew), type=\"latex\") \n  }\n} \n",
    "created" : 1507822636473.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2122907909",
    "id" : "83343F0A",
    "lastKnownWriteTime" : 1507822664,
    "last_content_update" : 1507822665003,
    "path" : "~/Dropbox/Research/0_code/useful-fn.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}