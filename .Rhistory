X[i, j] <- model.aic
}
}
arima(earnings$roa, order = c(5, 0, 4))$aic
X[5,4] <- arima(earnings$roa, order = c(5, 0, 4))$aic
a <- arima(earnings$roa, order = c(5, 0, 4))$aic
X[5,4] <- a
k <- 6
X <- matrix(Inf, nrow = k, ncol = k)
for(i in 1:k){
for(j in 1:k){
possibleError <- tryCatch(
model.aic <- arima(earnings$roa, order = c(i, 0, j))$aic,
error=function(e) e
)
if(inherits(possibleError, "error")) next
model.aic <- arima(earnings$roa, order = c(i, 0, j))$aic
X[i, j] <- model.aic
}
}
which.min(X)
which.min(X)/k
X[17]
which.min(X)%k
which.min(X)%%k
k
m <- which.min(X)
m
floor(m)
m <- which.min(X)%%ncol(X)
m
m <- which.min(X)/ncol(X)
m
floor(m)
min.col <- floor(which.min(X)/ncol(X))
min.row <- which.min(X[, min.col])
X[,1]
X[,2]
min.col <- ceil(which.min(X)/ncol(X))
min.col <- ceiling(which.min(X)/ncol(X))
min.row <- which.min(X[, min.col])
X[min.row, min.col]
min.col <- ceiling(which.min(X)/ncol(X)); min.col
min.row <- which.min(X[, min.col]); min.row
min.X <- c(min.row, min.col); min.X
arima(earnings$roa, order = c(5, 0, 3))$aic
rm(list=ls())
library(sas7bdat)
earnings <- read.sas7bdat("quarterly_earnings.sas7bdat")
names(earnings) <- tolower(names(earnings))
earnings$roa <- ts(earnings$roa, start = c(1962, 1), end = c(2018,1), frequency = 4)
plot(earnings$roa, xlim = c(1979,2016), lwd = 2, col='blue',
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings (ROA), 1979:I - 2016:IV')
adf.test(earnings$roa)
tseries::adf.test(earnings$roa)
?adf.test
tseries::adf.test(earnings$roa, k = 1)
tseries::adf.test(earnings$roa, k = 2)
tseries::adf.test(earnings$roa, k = 3)
tseries::adf.test(earnings$roa, k = 4)
tseries::adf.test(earnings$roa, k = 7)
a <- diff(earnings$roa)
adf.test(a)
plot(a)
png('roa-ts.png')
plot(earnings$roa, xlim = c(1979,2016), lwd = 2, col='blue',
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings (ROA), 1979:I - 2016:IV')
dev.off()
par(mfrow = c(2,1))
acf(earnings$roa, lwd = 3, main = "Autocorrelation of Aggregate Earnings", col='red')
pacf(earnings$roa, lwd = 3, main = "Partial Autocorrelation of Aggregate Earnings", col='red')
png('roa-acf.png')
par(mfrow = c(2,1))
acf(earnings$roa, lwd = 3, main = "Autocorrelation of Aggregate Earnings", col='red')
pacf(earnings$roa, lwd = 3, main = "Partial Autocorrelation of Aggregate Earnings", col='red')
dev.off()
tseries::adf.test(earnings$roa, k = 4)
a <- tseries::adf.test(earnings$roa, k = 4)
a$statistic
a$p.value
k <- 12
X <- matrix(NA, nrow = k, ncol = 2)
X[,1] <- 1:k
for(i in 1:k) X[i,2] <- tseries::adf.test(earnings$roa, k = i)$p.value
View(X)
names(X) <- c('lags', 'p-value')
k <- 12
X <- matrix(NA, nrow = k, ncol = 2)
names(X) <- c('lags', 'p-value')
X[,1] <- 1:k
for(i in 1:k) X[i,2] <- tseries::adf.test(earnings$roa, k = i)$p.value
View(X)
colnames(X) <- c('lags', 'p-value')
k <- 12
X <- data.frame(matrix(NA, nrow = k, ncol = 2))
colnames(X) <- c('lags', 'p-value')
names(X) <- c('lags', 'p-value')
X[, 'lags'] <- 1:k
for(i in 1:k) X[i, 'p-value'] <- tseries::adf.test(earnings$roa, k = i)$p.value
k <- 10
X <- data.frame(matrix(NA, nrow = k, ncol = 2))
names(X) <- c('lags', 'p-value')
X[, 'lags'] <- 1:k
for(i in 1:k) X[i, 'p-value'] <- tseries::adf.test(earnings$roa, k = i)$p.value
earnings$roa.diff1 <- diff(earnings$roa)
earnings$roa.diff1 <- c(NA, diff(earnings$roa))
head(earnings)
earnings$roa.diff1 <- c(NA, diff(earnings$roa))
k <- 10
X2 <- data.frame(matrix(NA, nrow = k, ncol = 2))
names(X2) <- c('lags', 'p-value')
X2[, 'lags'] <- 1:k
View(X2)
tseries::adf.test(earnings$roa.diff1, k = i)$p.value
## First-Differencing
roa.diff1 <- diff(earnings$roa)
k <- 10
X2 <- data.frame(matrix(NA, nrow = k, ncol = 2))
names(X2) <- c('lags', 'p-value')
X2[, 'lags'] <- 1:k
for(i in 1:k) X2[i, 'p-value'] <- tseries::adf.test(roa.diff1, k = i)$p.value
plot(roa.diff1, xlim = c(1979,2016), lwd = 2, col='blue',
xlab = 'Filing Quarter', ylab = 'ROA', main = 'First Differenced Time Series of Earnings (ROA), 1979:I - 2016:IV')
acf(roa.diff1, lwd = 3, main = "Autocorrelation of Aggregate Earnings", col='red')
pacf(roa.diff1, lwd = 3, main = "Partial Autocorrelation of Aggregate Earnings", col='red')
acf(roa.diff1, lwd = 3, main = "Autocorrelation of Aggregate Earnings", col='red')
png('roa-diff.png')
par(mfrow = c(3,1))
plot(roa.diff1, xlim = c(1979,2016), lwd = 2, col='blue',
xlab = 'Filing Quarter', ylab = 'ROA', main = 'First Differenced Time Series of Earnings (ROA), 1979:I - 2016:IV')
acf(roa.diff1, lwd = 3, main = "Autocorrelation of Aggregate Earnings", col='red')
pacf(roa.diff1, lwd = 3, main = "Partial Autocorrelation of Aggregate Earnings", col='red')
dev.off()
k <- 6
X <- matrix(Inf, nrow = k, ncol = k)
for(i in 1:k){
for(j in 1:k){
possibleError <- tryCatch(
model.aic <- arima(earnings$roa, order = c(i, 1, j))$aic,
error=function(e) e
)
if(inherits(possibleError, "error")) next
model.aic <- arima(earnings$roa, order = c(i, 0, j))$aic
X[i, j] <- model.aic
}
}
k <- 6; X <- matrix(Inf, nrow = k, ncol = k)
for(i in 1:k){
for(j in 1:k){
possibleError <- tryCatch(
model.aic <- arima(roa.diff1, order = c(i, 0, j))$aic,
error=function(e) e
)
if(inherits(possibleError, "error")) next
X[i, j] <- arima(earnings$roa, order = c(i, 0, j))$aic
}
}
k <- 6; X <- matrix(Inf, nrow = k, ncol = k)
for(i in 1:k){
for(j in 1:k){
possibleError <- tryCatch(
model.aic <- arima(roa.diff1, order = c(i, 0, j))$aic,
error=function(e) e
)
if(inherits(possibleError, "error")) next
model.aic <- arima(earnings$roa, order = c(i, 0, j))$aic
X[i, j] <- model.aic
}
}
k <- 6; X <- matrix(Inf, nrow = k, ncol = k)
for(i in 1:k){
for(j in 1:k){
possibleError <- tryCatch(
model.aic <- arima(roa.diff1, order = c(i, 0, j))$aic,
error=function(e) e
)
if(!inherits(possibleError, "error")){
model.aic <- arima(earnings$roa, order = c(i, 0, j))$aic
X[i, j] <- model.aic
}
}
}
k <- 6; X <- matrix(Inf, nrow = k, ncol = k)
for(i in 1:k){
for(j in 1:k){
possibleError <- tryCatch(
model.aic <- arima(roa.diff1, order = c(i, 0, j))$aic,
error=function(e) e
)
if(!inherits(possibleError, "error")){
model.aic <- arima(roa.diff1, order = c(i, 0, j))$aic
X[i, j] <- model.aic
}
}
}
k <- 6; X <- matrix(Inf, nrow = k, ncol = k)
for(i in 1:k){
for(j in 1:k){
possibleError <- tryCatch(
model.aic <- arima(roa.diff1, order = c(i, 0, j))$aic,
error=function(e) e
)
if(!inherits(possibleError, "error")){
#model.aic <- arima(roa.diff1, order = c(i, 0, j))$aic
X[i, j] <- model.aic
}
}
}
expand.grid(c(1:4, 1:4))
expand.grid(1:4, 1:4)
min.col <- ceiling(which.min(X)/ncol(X))
min.row <- which.min(X[, min.col])
min.X <- c(min.row, min.col); min.X
k <- 6; X <- matrix(Inf, nrow = k, ncol = k)
for(i in 1:k){
for(j in 1:k){
possibleError <- tryCatch(
model.aic <- arima(earnings$roa, order = c(i, 1, j))$aic,
error = function(e) e
)
if(!inherits(possibleError, "error")) X[i, j] <- model.aic
}
}
min.col <- ceiling(which.min(X)/ncol(X))
min.row <- which.min(X[, min.col])
min.X <- c(min.row, min.col); min.X
0:3
k <- 6; X <- matrix(Inf, nrow = (k+1), ncol = (k+1))
for(i in 0:k){
for(j in 0:k){
possibleError <- tryCatch(
model.aic <- arima(earnings$roa, order = c(i, 1, j))$aic,
error = function(e) e
)
if(!inherits(possibleError, "error")) X[i, j] <- model.aic
}
}
min.col <- ceiling(which.min(X)/ncol(X))
min.row <- which.min(X[, min.col])
min.X <- c(min.row, min.col); min.X
n <- nrow(earnings)
roa.train <- earnings[1:(n-8), "roa"]
roa.train <- ts(earnings[1:(n-8), "roa"], frequency = 4)
roa.test <- ts(earnings[(n-8+1):n, "roa"], frequency = 4)
plot(roa.train, lwd = 2, col='blue',
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings (ROA), 1979:I - 2016:IV')
par(mfrow=c(1,1))
plot(roa.train, lwd = 2, col='blue',
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings (ROA), 1979:I - 2016:IV')
View(earnings)
roa <- ts(earnings$roa, start = c(1962, 1), end = c(2018,1), frequency = 4)
wroa <- ts(earnings$wroa, start = c(1962, 1), end = c(2018,1), frequency = 4)
earn <- ts(earnings$earn, start = c(1962, 1), end = c(2018,1), frequency = 4)
wearn <- ts(earnings$wearn, start = c(1962, 1), end = c(2018,1), frequency = 4)
plot(roa, lwd = 2, col='blue')
plot(wroa, lwd = 2, col='blue')
plot(earn, lwd = 2, col='blue')
plot(wearn, lwd = 2, col='blue')
plot(roa, lwd = 2, col='blue', main = "ROA")
plot(wroa, lwd = 2, col='blue', main = "Wt ROA")
plot(earn, lwd = 2, col='blue', main = "Net Income")
plot(wearn, lwd = 2, col='blue', main = "Wt Net Income")
plot(roa, lwd = 2, col='blue', main = "ROA")
plot(earn, lwd = 2, col='blue', main = "Net Income")
o <- which(earnings$fyearq > 2016)
earnings <- earnings[fyearq > 2016, ]
earnings <- earnings[earnings$fyearq > 2016, ]
rm(list=ls())
library(sas7bdat)
library(tseries)
earnings <- read.sas7bdat("quarterly_earnings.sas7bdat")
names(earnings) <- tolower(names(earnings))
## Cut data off at Q4, 2016
earnings <- earnings[earnings$fyearq <= 2016, ]
earn <- ts(earnings$earn, start = c(1962, 1), end = c(2018,1), frequency = 4)
n <- nrow(earnings)
earn.train <- ts(earnings[1:(n-8), "earn"], frequency = 4)
earn.test <- ts(earnings[(n-8+1):n, "earn"], frequency = 4)
earn.train <- ts(earn[1:(n-8)], frequency = 4)
plot(earn.train)
roa <- ts(earnings$roa, start = c(1962, 1), end = c(2016,4), frequency = 4)
wroa <- ts(earnings$wroa, start = c(1962, 1), end = c(2016,4), frequency = 4)
earn <- ts(earnings$earn, start = c(1962, 1), end = c(2016,4), frequency = 4)
wearn <- ts(earnings$wearn, start = c(1962, 1), end = c(2016,4), frequency = 4)
n <- length(earn)
earn.train <- ts(earn[1:(n-8)], start = c(1962,1), end = c(2014, 4), frequency = 4)
plot(earn.train)
earn.test <- ts(earn[(n-8+1):n], start = c(2015,1), end = c(2016, 4), frequency = 4)
plot(earn.train, lwd = 2, col='blue',
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings, 1979:I - 2016:IV')
abline(h=0,v='1961Q1', col='grey60')
abline(h=0,v='1961', col='grey60')
earnings <- earnings[earnings$fyearq <= 2016 & earnings$fyearq >= 1975, ]
roa <- ts(earnings$roa, start = c(1975, 1), end = c(2016,4), frequency = 4)
wroa <- ts(earnings$wroa, start = c(1975, 1), end = c(2016,4), frequency = 4)
earn <- ts(earnings$earn, start = c(1975, 1), end = c(2016,4), frequency = 4)
wearn <- ts(earnings$wearn, start = c(1975, 1), end = c(2016,4), frequency = 4)
plot(roa, lwd = 2, col='blue', main = "ROA")
plot(wroa, lwd = 2, col='blue', main = "Wt ROA")
plot(earn, lwd = 2, col='blue', main = "Net Income")
plot(wearn, lwd = 2, col='blue', main = "Wt Net Income")
n <- length(earn)
earn.train <- ts(earn[1:(n-8)], start = c(1975,1), end = c(2014, 4), frequency = 4)
earn.test <- ts(earn[(n-8+1):n], start = c(2015,1), end = c(2016, 4), frequency = 4)
plot(earn.train, lwd = 2, col='blue',
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings, 1975:I - 2016:IV')
abline(h=0,v='1961', col='grey60')
abline(h=0,v='1975', col='grey60')
plot(earn.train, lwd = 2, col='blue', xlim=c(1975, 2014),
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings, 1975:I - 2016:IV')
plot(earn.train, lwd = 2, col='blue', xlim=c(1976, 2014),
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings, 1975:I - 2016:IV')
plot(earn.train, lwd = 2, col='blue', xlim=c(1977, 2014),
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings, 1975:I - 2016:IV')
plot(earn.train, lwd = 2, col='blue', xlim=c(1977, 2012),
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings, 1975:I - 2016:IV')
plot(earn.train, lwd = 2, col='blue', xlim=c(1977, 2013),
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings, 1975:I - 2016:IV')
plot(earn.train, lwd = 2, col='blue', xlim=c(1977, 2014),
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings, 1975:I - 2016:IV')
plot(earn.train, lwd = 2, col='blue', xlim=c(1977, 2013),
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings, 1975:I - 2016:IV')
plot(earn.train, lwd = 2, col='blue',
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings, 1975:I - 2016:IV')
abline(h=0, v=c('1975', '2014'), col='grey60')
abline(h=0, v=c('1975', '2015'), col='grey60')
plot(earn.train, lwd = 2, col='blue',
xlab = 'Filing Quarter', ylab = 'ROA', main = 'Time Series of Earnings, 1975:I - 2016:IV')
abline(h=0, v=c('1975', '2015'), col='grey60')
acf(earn.train, lwd = 3, main = "Autocorrelation of Aggregate Earnings", col='red')
pacf(earn.train, lwd = 3, main = "Partial Autocorrelation of Aggregate Earnings", col='red')
k <- 10
X <- data.frame(matrix(NA, nrow = k, ncol = 2))
names(X) <- c('lags', 'p-value')
X[, 'lags'] <- 1:k
for(i in 1:k) X[i, 'p-value'] <- tseries::adf.test(earn.train, k = i)$p.value
earn.diff1 <- diff(earn.train)
plot(earn.diff1, xlim = c(1979,2016), lwd = 2, col='blue',
xlab = 'Filing Quarter', ylab = 'ROA', main = 'First Differenced Time Series of Earnings (ROA), 1979:I - 2016:IV')
plot(earn.diff1, lwd = 2, col='blue',
xlab = 'Filing Quarter', ylab = 'ROA', main = 'First Differenced Time Series of Earnings (ROA), 1979:I - 2016:IV')
acf(earn.diff1, lwd = 3, main = "Autocorrelation of Aggregate Earnings", col='red')
pacf(earn.diff1, lwd = 3, main = "Partial Autocorrelation of Aggregate Earnings", col='red')
k <- 10
X2 <- data.frame(matrix(NA, nrow = k, ncol = 2))
names(X2) <- c('lags', 'p-value')
X2[, 'lags'] <- 1:k
for(i in 1:k) X2[i, 'p-value'] <- tseries::adf.test(earn.diff1, k = i)$p.value
k <- 6; X <- matrix(Inf, nrow = (k+1), ncol = (k+1))
for(i in 0:k){
for(j in 0:k){
possibleError <- tryCatch(
model.aic <- arima(earn.diff1, order = c(i, 1, j))$aic,
error = function(e) e
)
if(!inherits(possibleError, "error")) X[i, j] <- model.aic
}
}
min.col <- ceiling(which.min(X)/ncol(X))
min.row <- which.min(X[, min.col])
min.X <- c(min.row, min.col); min.X
k <- 6; X <- matrix(Inf, nrow = (k+1), ncol = (k+1))
for(i in 0:k){
for(j in 0:k){
possibleError <- tryCatch(
model.aic <- arima(earn.diff1, order = c(i, 0, j))$aic,
error = function(e) e
)
if(!inherits(possibleError, "error")) X[i, j] <- model.aic
}
}
min.col <- ceiling(which.min(X)/ncol(X))
min.row <- which.min(X[, min.col])
min.X <- c(min.row, min.col); min.X
m1 <- arima(earn.diff1, order = c(4, 0, 4)); summary(m1)
k <- 6; X <- matrix(Inf, nrow = (k+1), ncol = (k+1))
for(i in 0:k){
for(j in 0:k){
possibleError <- tryCatch(
model.aic <- arima(earn.diff1, order = c(i, 0, j))$aic,
error = function(e) e
)
if(!inherits(possibleError, "error")) X[i, j] <- model.aic
}
}
min.col <- ceiling(which.min(X)/ncol(X))
min.row <- which.min(X[, min.col])
min.X <- c(min.row, min.col); min.X
m1 <- arima(earn.diff1, order = c(5, 0, 5)); summary(m1)
m1 <- arima(earn.diff1, order = c(5, 0, 5)); m1
for(i in 0:10) print(i)
k <- 6; X <- matrix(Inf, nrow = (k+1), ncol = (k+1))
for(i in 0:k){
for(j in 0:k){
possibleError <- tryCatch(
model.aic <- arima(earn.diff1, order = c(i, 0, j))$aic,
error = function(e) e
)
if(!inherits(possibleError, "error")) X[i+1, j+1] <- model.aic
}
}
min.col <- ceiling(which.min(X)/ncol(X))
min.row <- which.min(X[, min.col])
min.X <- c(min.row, min.col); min.X
k <- 6; ADF.RESULTS <- matrix(Inf, nrow = (k+1), ncol = (k+1))
for(i in 0:k){
for(j in 0:k){
possibleError <- tryCatch(
model.aic <- arima(earn.diff1, order = c(i, 0, j))$aic,
error = function(e) e
)
if(!inherits(possibleError, "error")) ADF.RESULTS[i+1, j+1] <- model.aic
}
}
min.col <- ceiling(which.min(ADF.RESULTS)/ncol(ADF.RESULTS)); min.col
min.row <- which.min(ADF.RESULTS[, min.col]); min.row
m1 <- arima(earn.diff1, order = c(6, 0, 6)); m1
m1 <- arima(earn.diff1, order = c(5, 0, 5)); m1
predict(m1, earn.test)
?arima
predict(m1, n.ahead = 8)
plot(predict(m1, n.ahead = 8))
m1.predictions <- predict(m1, n.ahead = 8)
plot(m1.predictions$pred)
plot(earn.diff1)
points(m1.predictions$pred, type='l')
points(m1.predictions$pred, type='l', col = 'red')
earn.diff1
plot(earn.diff1, lwd = 3)
points(m1.predictions$pred, type='l', col = 'red', lwd = 3)
?forecast
library(forecast)
?forecast
m1.predictions <- forecast(m1, h = 8)
plot(m1.predictions, lwd = 3)
plot(m1.predictions, lwd = 3, xlim=c(2010, 2017))
lines(earn.test, col = 'red', lwd = 3)
earn.test.diff1 <- diff(earn.test)
lines(earn.test.diff1, col = 'red', lwd = 3)
earn.test.diff1
m1.predictions
earn.test.diff1 <- diff(ts(earn[(n+8):n]))
plot(m1.predictions, lwd = 3, xlim=c(2010, 2017))
lines(earn.test.diff1, col = 'red', lwd = 3)
earn.test.diff1
n <- length(earn)
earn.diff1 <- diff(earn)
n <- length(earn.diff1)
earn.diff1.train <- ts(earn.diff1[1:(n-8)], start = c(1975,2), end = c(2014, 4), frequency = 4)
earn.diff1.test <- ts(earn.diff1[(n-8+1):n], start = c(2015,1), end = c(2016, 4), frequency = 4)
m1 <- arima(earn.diff1.train, order = c(5, 0, 5)); m1
m1.predictions <- forecast(m1, h = 8)
plot(m1.predictions, lwd = 3, xlim=c(2010, 2017))
lines(earn.test.diff1, col = 'red', lwd = 3)
earn.test.diff1
earn.diff1[(n-8+1):n]
ts(earn.diff1[(n-8+1):n], start = c(2015,1), end = c(2016, 4), frequency = 4)
earn.diff1.test <- ts(earn.diff1[(n-8+1):n], start = c(2015,1), end = c(2016, 4), frequency = 4)
lines(earn.diff1.test, col = 'red', lwd = 3)
abline(h=2015)
abline(v=2015)
tail(earn.diff1.train)
head(earn.diff1.test)
lines(earn.diff1, col = 'red', lwd = 3)
lines(earn.diff1.train, col = 'black', lwd = 3)
abline(v=c(2015, 2017))
abline(v=c(2015, 2016.75))
plot(m1.predictions, lwd = 3, xlim=c(2010, 2016.75))
lines(earn.diff1, col = 'red', lwd = 3)
lines(earn.diff1.train, col = 'black', lwd = 3)
abline(v=c(2015, 2016.75), h=0, col='grey60')
m2 <- auto.arima(earn.diff1.train)
m2
?auto.arima
m2 <- auto.arima(earn.diff1.train, ic = "AIC"); m2
m2 <- auto.arima(earn.diff1.train, ic = "aic"); m2
base::arima(earn.diff1.train, order = c(1, 0, 2))
arima(earn.diff1.train, order = c(1, 0, 2))
m2 <- auto.arima(earn.diff1.train, seasonal = TRUE, ic = "aic"); m2
Arima(earn.diff1.train, order = c(1, 0, 2))
m2 <- auto.arima(earn.diff1.train, seasonal = FALSE, ic = "aic"); m2
m2 <- auto.arima(earn.diff1.train, seasonal = FALSE, ic = "aic", stepwise = FALSE); m2
m2 <- auto.arima(earn.diff1.train, seasonal = FALSE, ic = "aic", stepwise = FALSE, trace = TRUE); m2
m2 <- auto.arima(earn.diff1.train, seasonal = FALSE, ic = "aic", stepwise = FALSE, max.order = 10, trace = TRUE); m2
Arima(earn.diff1.train, order = c(5, 0, 5))
m2 <- auto.arima(earn.diff1.train, seasonal = FALSE, ic = "aic", stepwise = FALSE, max.order = 10, approximation = FALSE, trace = TRUE); m2
m3 <- auto.arima(earn.diff1.train, seasonal = FALSE, ic = "bic",
stepwise = FALSE, max.order = 10,
approximation = FALSE, trace = TRUE); m3
m4 <- auto.arima(earn.diff1.train, seasonal = FALSE, ic = "aicc",
stepwise = FALSE, max.order = 10,
approximation = FALSE, trace = TRUE); m4
m3.predictions <- forecast(m3, h = 8)
plot(m3.predictions, lwd = 3, xlim=c(2010, 2016.75))
lines(earn.diff1, col = 'red', lwd = 3)
lines(earn.diff1.train, col = 'black', lwd = 3)
abline(v=c(2015, 2016.75), h=0, col='grey60')
png('arma55.png')
plot(m1.predictions, lwd = 3, xlim=c(2010, 2016.75))
lines(earn.diff1, col = 'red', lwd = 3)
lines(earn.diff1.train, col = 'black', lwd = 3)
abline(v=c(2015, 2016.75), h=0, col='grey60')
dev,off()
dev.off()
dev.off()
dev.off()
png('arma55.png')
plot(m1.predictions, lwd = 3, xlim=c(2010, 2016.75))
lines(earn.diff1, col = 'red', lwd = 3)
lines(earn.diff1.train, col = 'black', lwd = 3)
abline(v=c(2015, 2016.75), h=0, col='grey60')
dev.off()
